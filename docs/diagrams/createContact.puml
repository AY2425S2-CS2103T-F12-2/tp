@startuml
!include style.puml
skinparam ArrowFontStyle plain

actor "User" as User
participant ":LogicManager" as LM #Blue
participant "a:AddCommand" as AddCommand #Blue
participant ":Model" as Model #Red
participant ":ConfirmationManager" as CM #Blue
participant "r:CommandResult" as Result #DarkRed

User -> LM: execute("add n/John Doe ...")
activate LM

LM -> AddCommand: execute(model)
activate AddCommand

AddCommand -> Model: hasPerson(toAdd)
activate Model
Model --> AddCommand: personExists
deactivate Model

alt person exists and !isForced
    AddCommand -> CM: setPendingCommand(this)
    AddCommand -> Result: new CommandResult(duplicateMessage, requiresConfirmation)
else person doesn't exist or isForced
    alt isForced
        AddCommand -> Model: forceAddPerson(toAdd)
    else
        AddCommand -> Model: addPerson(toAdd)
    end
    AddCommand -> Result: new CommandResult(successMessage)
end

AddCommand --> LM: return result
deactivate AddCommand

LM --> User: display result
deactivate LM
@enduml